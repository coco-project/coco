# needed for websocket connections to the backend
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen  80;
    root    /srv/ipynbsrv/www;

    location / {
        include     /usr/local/openresty/nginx/conf/uwsgi_params;
        uwsgi_pass  unix:/var/run/ipynbsrv/ipynbsrv.sock;
    }

    # static files in /srv/ipynbsrv/www/static
    # collect them with python manage.py collectstatic
    location /static {
        expires  max;
    }

    # location for the public listening
    location /public {
        autoindex  on;
        root  /srv/ipynbsrv/data;
    }

    # location for documentation
    location /docs {
        root /srv/ipynbsrv/www/static;
    }

    # proxy/workspace location
    location ~* /workspace/(\d+)/(.*) {
        # authorization
        # ensure only container's owner can access it
        satisfy  all;
        auth_request  /auth;

        # use the Django error pages
        # forbidden = 404 so the user doesn't know there is a container
        # 50x grouped to 500
        error_page 403 404  /error/404;
        error_page 500 502 503 504  /error/500;

        # needed for websockets connections
        proxy_http_version  1.1;
        proxy_set_header    Upgrade     $http_upgrade;
        proxy_set_header    Connection  $connection_upgrade;
        proxy_read_timeout  86400s;
        proxy_send_timeout  86400s;

        proxy_set_header  Host                 $host;
        proxy_set_header  X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Protocol $scheme;
        proxy_set_header  X-Real-IP            $remote_addr;

        proxy_pass  http://172.17.42.1:$1;
    }

    # internal only location that is called as a subrequest
    # by requests to the workspace location
    # in here, we contact the Django backend to check authorization
    location = /auth {
        internal;

        proxy_set_header  Content-Length  "";
        proxy_set_header  X-Original-URI  $request_uri;

        proxy_pass_request_body  off;
        proxy_pass  http://$host/_workspace_auth_check;
    }
}
