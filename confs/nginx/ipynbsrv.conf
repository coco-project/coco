# needed because we use dynamic proxy_pass backend
resolver  10.51.2.32 10.51.2.33;

server {
    listen  80;
    root    /srv/ipynbsrv/www;

    location / {
        try_files  $uri $uri/index.html $uri.html @django;
    }

    # uwsgi Django application backend
    location @django {
        include     /usr/local/openresty/nginx/conf/uwsgi_params;
        uwsgi_pass  unix:/var/run/ipynbsrv/ipynbsrv.sock;
    }

    # static files in /srv/ipynbsrv/www/static
    # collect them with python manage.py collectstatic
    location /static {
        expires  max;
    }

    # location for the public listening
    location /public {
        autoindex  on;
        root  /srv/ipynbsrv/data;
    }

    # proxy/workspace location
    location ~* /workspace/(\d+)/(.*) {
        # authorization
        # ensure only container's owner can access it
        satisfy  all;
        auth_request  /auth;

        # needed for websockets connections
        proxy_http_version  1.1;
        proxy_set_header    Upgrade     $http_upgrade;
        proxy_set_header    Connection  "upgrade";
        proxy_read_timeout  86400;
        proxy_set_header    Origin      "";

        proxy_set_header  Host                 $host:$1;
        proxy_set_header  X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Protocol $scheme;
        proxy_set_header  X-Real-IP            $remote_addr;

        proxy_pass  http://$host:$1;
    }

    # internal only location that is called as a subrequest
    # by requests to the workspace location
    # in here, we contact the Django backend to check authorization
    location = /auth {
        internal;

        proxy_set_header  Content-Length  "";
        proxy_set_header  X-Original-URI  $request_uri;

        proxy_pass_request_body  off;
        proxy_pass  http://$host/_workspace_auth_check;
    }
}
