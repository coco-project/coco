#!/bin/sh

# ----------------------------
# ARGUMENTS
# ----------------------------
# make sure the exposed port is passed as an argument
# we need that one for the IPython notebook base_url
if [ $# -ne 1 ]; then
    exit 65
fi
PORT=$1

# ----------------------------
# GENERIC CLEANUP
# ----------------------------
# if this is a clone/not a fresh container, previously mounted home dirs
# are somehow preversed. we need to remove them
find /home/* -maxdepth 1 -user root -delete

# ----------------------------
# GENERIC INIT/SETUP
# ----------------------------
# get the user to which this container belongs
# since we only mount the owner's home directory and no one is able to create dirs in /home
# we can be sure there is only one dir with the username's name
USER=`ls /home/`
# set the user as an allowed SSH user
echo ${USER} > /etc/ssh/sshd.allow
# create the symlink home symlink
# this is a temporary fix, since docker-py has problems mounting the same dir twice
HOME_DIR="/data/home"
if [ -h "${HOME_DIR}" ]; then
    unlink ${HOME_DIR}
fi
ln -s /home/${USER} ${HOME_DIR}

# chown the /data directory so the user is able to store his personal per-container
# files in there
chown ${USER}:${USER} /home/${USER}
chmod 700 /home/${USER}
chown ${USER}:${USER} /data
find /data/ -not -path "/data/public/*" -not -path "/data/shares/*" \
    -not -user root | xargs chown ${USER}:${USER}

# ----------------------------
# IMAGE INIT/SETUP
# ----------------------------
# chown all python modules to the current user
# cloned containers may otherwise contain files by other users so we wouldn't have permissions
chown -R ${USER} /usr/local/lib/python2.7/dist-packages/

# create the IPython profile
# we need it before we start so we can set the base_url
IPYTHON_DIR="/data/.ipython"
if [ ! -d "${IPYTHON_DIR}" ]; then
    /sbin/setuser ${USER} \
        ipython profile create default --ipython-dir=${IPYTHON_DIR}
fi
IPYTHON_NB_CONF="${IPYTHON_DIR}/profile_default/ipython_notebook_config.py"
sed -i "s/[# ]*c.NotebookApp.base_url = '.*'/c.NotebookApp.base_url = '\/workspace\/${PORT}\/'/" ${IPYTHON_NB_CONF}

# a dirty way to fix permissions error when starting a cloned container
# nobody knows why...
IPYTHON_SECURITY_DIR="/data/.ipython/profile_default/security"
rm -rf ${IPYTHON_SECURITY_DIR}
mkdir ${IPYTHON_SECURITY_DIR}
chown ${USER}:${USER} ${IPYTHON_SECURITY_DIR}
chmod 0700 ${IPYTHON_SECURITY_DIR}

# start the IPython notebook server
echo "Starting the IPython notebook under user '${USER}' on port ${PORT}..."
/sbin/setuser ${USER} \
    ipython notebook --no-browser --ip=0.0.0.0 \
    --ipython-dir=${IPYTHON_DIR} --notebook-dir=/data
